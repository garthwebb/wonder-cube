class Corners:

    CORNER_0 = 0
    CORNER_1 = 1
    CORNER_2 = 2
    CORNER_3 = 3
    CORNER_4 = 4
    CORNER_5 = 5
    CORNER_6 = 6
    CORNER_7 = 7

    tracks = [
        [  # Corner 0
            [
                [0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [0, 9], [0, 10], [0, 11],
                [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13],
                [4, 14], [4, 15], [4, 16], [4, 17],
            ],
            [
                [0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [0, 9], [0, 10], [0, 11],
                [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [2, 26], [2, 25], [2, 24], [2, 23], [2, 22],
                [2, 21], [2, 20], [2, 19], [2, 18],
            ],
            [
                [0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [2, 35], [2, 34], [2, 33],
                [2, 32], [2, 31], [2, 30], [2, 29], [2, 28], [2, 27], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13],
                [4, 14], [4, 15], [4, 16], [4, 17],
            ],
            [
                [0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [2, 35], [2, 34], [2, 33],
                [2, 32], [2, 31], [2, 30], [2, 29], [2, 28], [2, 27], [2, 26], [2, 25], [2, 24], [2, 23], [2, 22],
                [2, 21], [2, 20], [2, 19], [2, 18],
            ],
            [
                [5, 26], [5, 25], [5, 24], [5, 23], [5, 22], [5, 21], [5, 20], [5, 19], [5, 18], [5, 17], [5, 16],
                [5, 15], [5, 14], [5, 13], [5, 12], [5, 11], [5, 10], [5, 9], [1, 35], [1, 34], [1, 33], [1, 32],
                [1, 31], [1, 30], [1, 29], [1, 28], [1, 27],
            ],
            [
                [5, 26], [5, 25], [5, 24], [5, 23], [5, 22], [5, 21], [5, 20], [5, 19], [5, 18], [5, 17], [5, 16],
                [5, 15], [5, 14], [5, 13], [5, 12], [5, 11], [5, 10], [5, 9], [2, 9], [2, 10], [2, 11], [2, 12],
                [2, 13], [2, 14], [2, 15], [2, 16], [2, 17],
            ],
            [
                [5, 26], [5, 25], [5, 24], [5, 23], [5, 22], [5, 21], [5, 20], [5, 19], [5, 18], [2, 0], [2, 1], [2, 2],
                [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [1, 35], [1, 34], [1, 33], [1, 32], [1, 31], [1, 30],
                [1, 29], [1, 28], [1, 27],
            ],
            [
                [5, 26], [5, 25], [5, 24], [5, 23], [5, 22], [5, 21], [5, 20], [5, 19], [5, 18], [2, 0], [2, 1], [2, 2],
                [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [2, 9], [2, 10], [2, 11], [2, 12], [2, 13], [2, 14],
                [2, 15], [2, 16], [2, 17],
            ],
            [
                [5, 27], [5, 28], [5, 29], [5, 30], [5, 31], [5, 32], [5, 33], [5, 34], [5, 35], [5, 0], [5, 1], [5, 2],
                [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [2, 9], [2, 10], [2, 11], [2, 12], [2, 13], [2, 14],
                [2, 15], [2, 16], [2, 17],
            ],
            [
                [5, 27], [5, 28], [5, 29], [5, 30], [5, 31], [5, 32], [5, 33], [5, 34], [5, 35], [5, 0], [5, 1], [5, 2],
                [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [1, 35], [1, 34], [1, 33], [1, 32], [1, 31], [1, 30],
                [1, 29], [1, 28], [1, 27],
            ],
            [
                [5, 27], [5, 28], [5, 29], [5, 30], [5, 31], [5, 32], [5, 33], [5, 34], [5, 35], [1, 8], [1, 7], [1, 6],
                [1, 5], [1, 4], [1, 3], [1, 2], [1, 1], [1, 0], [2, 9], [2, 10], [2, 11], [2, 12], [2, 13], [2, 14],
                [2, 15], [2, 16], [2, 17],
            ],
            [
                [5, 27], [5, 28], [5, 29], [5, 30], [5, 31], [5, 32], [5, 33], [5, 34], [5, 35], [1, 8], [1, 7], [1, 6],
                [1, 5], [1, 4], [1, 3], [1, 2], [1, 1], [1, 0], [1, 35], [1, 34], [1, 33], [1, 32], [1, 31], [1, 30],
                [1, 29], [1, 28], [1, 27],
            ],
            [
                [3, 8], [3, 7], [3, 6], [3, 5], [3, 4], [3, 3], [3, 2], [3, 1], [3, 0], [3, 35], [3, 34], [3, 33],
                [3, 32], [3, 31], [3, 30], [3, 29], [3, 28], [3, 27], [4, 26], [4, 25], [4, 24], [4, 23], [4, 22],
                [4, 21], [4, 20], [4, 19], [4, 18],
            ],
            [
                [3, 8], [3, 7], [3, 6], [3, 5], [3, 4], [3, 3], [3, 2], [3, 1], [3, 0], [3, 35], [3, 34], [3, 33],
                [3, 32], [3, 31], [3, 30], [3, 29], [3, 28], [3, 27], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22],
                [1, 23], [1, 24], [1, 25], [1, 26],
            ],
            [
                [3, 8], [3, 7], [3, 6], [3, 5], [3, 4], [3, 3], [3, 2], [3, 1], [3, 0], [1, 9], [1, 10], [1, 11],
                [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [4, 26], [4, 25], [4, 24], [4, 23], [4, 22],
                [4, 21], [4, 20], [4, 19], [4, 18],
            ],
            [
                [3, 8], [3, 7], [3, 6], [3, 5], [3, 4], [3, 3], [3, 2], [3, 1], [3, 0], [1, 9], [1, 10], [1, 11],
                [1, 12], [1, 13], [1, 14], [1, 15], [1, 16], [1, 17], [1, 18], [1, 19], [1, 20], [1, 21], [1, 22],
                [1, 23], [1, 24], [1, 25], [1, 26],
            ],
            [
                [0, 35], [0, 34], [0, 33], [0, 32], [0, 31], [0, 30], [0, 29], [0, 28], [0, 27], [0, 26], [0, 25],
                [0, 24], [0, 23], [0, 22], [0, 21], [0, 20], [0, 19], [0, 18], [2, 26], [2, 25], [2, 24], [2, 23],
                [2, 22], [2, 21], [2, 20], [2, 19], [2, 18],
            ],
            [
                [0, 35], [0, 34], [0, 33], [0, 32], [0, 31], [0, 30], [0, 29], [0, 28], [0, 27], [0, 26], [0, 25],
                [0, 24], [0, 23], [0, 22], [0, 21], [0, 20], [0, 19], [0, 18], [4, 9], [4, 10], [4, 11], [4, 12],
                [4, 13], [4, 14], [4, 15], [4, 16], [4, 17],
            ],
            [
                [0, 35], [0, 34], [0, 33], [0, 32], [0, 31], [0, 30], [0, 29], [0, 28], [0, 27], [4, 0], [4, 1], [4, 2],
                [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [2, 26], [2, 25], [2, 24], [2, 23], [2, 22], [2, 21],
                [2, 20], [2, 19], [2, 18],
            ],
            [
                [0, 35], [0, 34], [0, 33], [0, 32], [0, 31], [0, 30], [0, 29], [0, 28], [0, 27], [4, 0], [4, 1], [4, 2],
                [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [4, 12], [4, 13], [4, 14],
                [4, 15], [4, 16], [4, 17],
            ],
            [
                [3, 9], [3, 10], [3, 11], [3, 12], [3, 13], [3, 14], [3, 15], [3, 16], [3, 17], [3, 18], [3, 19],
                [3, 20], [3, 21], [3, 22], [3, 23], [3, 24], [3, 25], [3, 26], [1, 18], [1, 19], [1, 20], [1, 21],
                [1, 22], [1, 23], [1, 24], [1, 25], [1, 26],
            ],
            [
                [3, 9], [3, 10], [3, 11], [3, 12], [3, 13], [3, 14], [3, 15], [3, 16], [3, 17], [3, 18], [3, 19],
                [3, 20], [3, 21], [3, 22], [3, 23], [3, 24], [3, 25], [3, 26], [4, 26], [4, 25], [4, 24], [4, 23],
                [4, 22], [4, 21], [4, 20], [4, 19], [4, 18],
            ],
            [
                [3, 9], [3, 10], [3, 11], [3, 12], [3, 13], [3, 14], [3, 15], [3, 16], [3, 17], [4, 35], [4, 34],
                [4, 33], [4, 32], [4, 31], [4, 30], [4, 29], [4, 28], [4, 27], [1, 18], [1, 19], [1, 20], [1, 21],
                [1, 22], [1, 23], [1, 24], [1, 25], [1, 26],
            ],
            [
                [3, 9], [3, 10], [3, 11], [3, 12], [3, 13], [3, 14], [3, 15], [3, 16], [3, 17], [4, 35], [4, 34],
                [4, 33], [4, 32], [4, 31], [4, 30], [4, 29], [4, 28], [4, 27], [4, 26], [4, 25], [4, 24], [4, 23],
                [4, 22], [4, 21], [4, 20], [4, 19], [4, 18],
            ],
        ],
        [  # Corner 1
            # TBD
        ],
        [  # Corner 2
            # TBD
        ],
        [  # Corner 3
            # TBD
        ],
        [  # Corner 4
            # TBD
        ],
        [  # Corner 5
            # TBD
        ],
        [  # Corner 6
            # TBD
        ],
        [  # Corner 7
            # TBD
        ],
    ]

    @staticmethod
    def gen_derived_corners():
        # Corner 0 and corner 6 oppose each other
        Corners.tracks[Corners.CORNER_6] = []
        for track in Corners.tracks[Corners.CORNER_0]:
            new_track = list(track)
            new_track.reverse()
            Corners.tracks[Corners.CORNER_6].append(new_track)

        # Corner 1 and corner 7 oppose each other
        Corners.tracks[Corners.CORNER_7] = []
        for track in Corners.tracks[Corners.CORNER_1]:
            new_track = list(track)
            new_track.reverse()
            Corners.tracks[Corners.CORNER_7].append(new_track)

        # Corner 2 and corner 4 oppose each other
        Corners.tracks[Corners.CORNER_4] = []
        for track in Corners.tracks[Corners.CORNER_2]:
            new_track = list(track)
            new_track.reverse()
            Corners.tracks[Corners.CORNER_4].append(new_track)

        # Corner 3 and corner 5 oppose each other
        Corners.tracks[Corners.CORNER_5] = []
        for track in Corners.tracks[Corners.CORNER_3]:
            new_track = list(track)
            new_track.reverse()
            Corners.tracks[Corners.CORNER_5].append(new_track)

